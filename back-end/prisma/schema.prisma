// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum AbsenceType {
  SICK
  VACATION
  OTHER
}

model User {
  uuid           String           @id @default(uuid())
  email          String           @unique
  username       String?
  password       String?
  indisposed     Boolean          @default(false)
  AccessToken    AccessToken[]
  ShoppingCart   ShoppingCart?
  absenceReports AbsenceReports[]
  admin          Boolean          @default(false)
  appointments   Appointment[]
}

model Appointment {
  uuid        String   @id @default(uuid())
  user        User     @relation(fields: [userUuid], references: [uuid])
  userUuid    String
  date        DateTime
  title       String
  description String?
}

model Product {
  uuid         String    @id @default(uuid())
  name         String    @unique
  description  String?
  price        String
  imageUrl     String?
  kuinId       Int?
  stock        stock?
  height_cm    Int?
  width_cm     Int?
  depth_cm     Int?
  weight_gr    Int?
  createdAt    DateTime  @default(now())
  barcode      String?   @unique
  categoryUuid String?
  Category     Category? @relation(fields: [categoryUuid], references: [uuid])
}

model Category {
  uuid        String    @id @default(uuid())
  name        String
  description String
  products    Product[]
}

model stock {
  uuid        String  @id @default(uuid())
  product     Product @relation(fields: [productUuid], references: [uuid])
  productUuid String  @unique
  quantity    Int
}

model AbsenceReports {
  uuid     String      @id @default(uuid())
  user     User        @relation(fields: [userUuid], references: [uuid])
  userUuid String
  date     DateTime
  active   Boolean     @default(true)
  type     AbsenceType
}

model AccessToken {
  uuid      String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userUuid], references: [uuid])
  userUuid  String
  expiresAt DateTime
}

model ShoppingCart {
  uuid                   String                  @id @default(uuid())
  user                   User                    @relation(fields: [userUuid], references: [uuid])
  userUuid               String                  @unique
  productsOnShoppingCart ProductOnShoppingCart[]
}

model ProductOnShoppingCart {
  uuid           String       @id @default(uuid())
  shoppingCart   ShoppingCart @relation(fields: [shoppingCartId], references: [uuid])
  shoppingCartId String
  productId      String
  quantity       Int          @default(1)
}

model Settings {
  application       String  @unique
  categoriesEnabled Boolean @default(true)
}
